<!--
***********************************************************************************************
Microsoft.Cpp.WindowsPhone.8.0.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="MSBuild64BitCheck" >
    <Target Name="MSBuild64BitCheck">
        <Error Text="Building Windows Phone application using MSBuild 64 bit is not supported. If you are using TFS build definitions, change the MSBuild platform to x86." Condition="'$([System.Environment]::Is64BitProcess)'=='True'"/>
    </Target>
    <!-- Import the targets for packaging -->
    <Import Project="Microsoft.Phone.Packaging.targets"/>

    <!-- Add the WMAppManifest.xml to be Xapped -->
    <ItemGroup>
        <XapFilesInputCollection Include="$(OutDir)\WMAppManifest.xml" />
    </ItemGroup>

    <PropertyGroup>
        <BuildDependsOn Condition="'$(ConfigurationType)'=='Application' or '$(TestApplication)'=='true'">
            $(BuildDependsOn);
            WMAppManifestWinMDRegistration;
            ValidateWMAppManifest;
            XapPackager;
            _GetPackageProperties;
        </BuildDependsOn>
    </PropertyGroup>

    <!-- Packaging Related targets  -->
    <PropertyGroup>
        <PathOfWMAppManifestRelativeToProject>WMAppManifest.xml</PathOfWMAppManifestRelativeToProject>
    </PropertyGroup>
  
    <PropertyGroup>
        <XapPackagerDependsOn>
            $(XapPackagerDependsOn);
            FilesToXap;
        </XapPackagerDependsOn>
    </PropertyGroup>

    <PropertyGroup>
       <FilesToXapDependsOn>
           $(FilesToXapDependsOn);
           FilterPackagingOutPuts;
           XapImageFiles;
       </FilesToXapDependsOn>
       <FilesToXapDependsOn Condition="'$(GetCopyToOutputDirectoryContentProjectItemsDependsOn)'!=''">$(FilesToXapDependsOn);GetCopyToOutputDirectoryContentProjectItems</FilesToXapDependsOn>
    </PropertyGroup>
  
  
  
  <Target
        Name="FilesToXap"
        Outputs="@(XapFilesInputCollection)"
        DependsOnTargets="$(FilesToXapDependsOn)">

        <ItemGroup>
          <XapIntermediateFileList Include="@(FilteredPackagingOutputs)"/>
          <XapIntermediateFileList Include="@(XapFilesInputImageCollection)"/>
        </ItemGroup>

        <RemoveDuplicatePayload Inputs="@(XapIntermediateFileList)">
          <Output TaskParameter="Filtered" ItemName="PackagePayload" />
        </RemoveDuplicatePayload>

        <ItemGroup>
            <!-- Include the built output, satellites and content files-->
            <XapFilesInputCollection Include="@(PackagePayload)"/>
        </ItemGroup>

    </Target>
    <Import Project="Microsoft.WindowsPhone.PostImport.targets" Condition="Exists('Microsoft.WindowsPhone.PostImport.targets')"/>
    
</Project>
